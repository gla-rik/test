// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependency

import (
	"wb/config"
	"wb/internal/config/database/postgre"
	"wb/internal/http/controllers"
	"wb/internal/orm/repositories"
	"wb/internal/routes"
	"wb/internal/services"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	app := NewFiberApp()
	configConfig, err := config.LoadConfig()
	if err != nil {
		return nil, err
	}
	db, err := postgre.NewDatabase(configConfig)
	if err != nil {
		return nil, err
	}
	cacheService := services.NewCacheService(db)
	orderRepository := repositories.NewOrderRepository(db)
	order := controllers.NewOrderController(db, cacheService, orderRepository)
	kafkaConfig := ProvideKafkaConfig(configConfig)
	kafkaService, err := services.NewKafkaService(kafkaConfig, cacheService)
	if err != nil {
		return nil, err
	}
	kafkaController := controllers.NewKafkaController(kafkaService)
	router := routes.NewRouter(app, order, kafkaController)
	fakeDataService := services.NewFakeDataService()
	dependencyApp := &App{
		FiberApp: app,
		Router:   router,
		Config:   configConfig,
		Kafka:    kafkaService,
		Cache:    cacheService,
		FakeData: fakeDataService,
	}
	return dependencyApp, nil
}
